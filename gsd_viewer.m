function gsd_viewer(varargin)
% gsd_viwer GUI to read & visdualize gsd192 data.
%
%   + 1.1  2018/06/06
%          - support energy calibration using n-th polynomial 
%   + 1.0  2018/05/15
%          - initial version
% 
% Copyright 2018 Andrew Chuang (chuang.cp@gmail.com)
% $Revision: 1.1 $  $Date: 2018/06/06 $



hgsdviewMain = findall(0,'Tag','gsdviewmain_Fig');
if isempty(hgsdviewMain)
    % --------------------------------
    % --- Layout parameters
    % --------------------------------
    config.figSize = [590 500];   % [590 500];
    config.figPos  = [50 100 config.figSize];
    config.size.edbox1 = [120 30];  % size of text box
    config.size.edbox2 = [125 30];
    config.size.edbox3 = [ 60 30];
    config.size.edbox4 = [ 85 30];
    config.size.edbox5 = [150 30];
    config.fs.edbox = 13 ;
    config.fs.text1 = 11 ;
    config.fs.text2 = 11 ;
    config.fs.text3 = 15 ;
    config.color.mainbg = [1 1 0.85];
    config.color.textbg = [0.8 1 0.8];
    % --------------------------------
    % --- Folder/File path(s)
    % --------------------------------
    config.folder   = '';  % working directory
    config.file     = '';  % 
        
    % ------------------------------------------------------------------%%%
    % --- Visualization options
    % ------------------------------------------------------------------%%%
    config.visopt             = '';       
    config.visopt.x_unit      = 'ch';
    config.visopt.datalim     = {[0 4096],'auto','auto'};
    config.visopt.yscale      = 0;  % 0: 'log' 1: 'linear'

    
    % ------------------------------------------------------------------%%%
    % --- Detector parameters
    % ------------------------------------------------------------------%%%
    config.visopt.Inst(1).par     = repmat([5 0.053 0],192,1);  % [a b TOA]
    %%% ----------------------------------------------------------------%%%
    initFigure(config);
else
    figure(hgsdviewMain);
end

%================================================================
% --- initialize main figure layout
%================================================================
function initFigure(varargin)

config = varargin{1};

% --------------------------------
% --- main figure handle
% --------------------------------
figSize = config.figSize;
figPos  = config.figPos;
hgsdviewMain = figure(...
    'BackingStore','on',...
    'Units','pixels',...
    'DockControls','off',...
    'Resize','off',...
    'PaperOrient','portrait',...
    'PaperPositionMode','auto',...
    'IntegerHandle','off',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'Toolbar','none',...
    'Name','GSD_192 Viewer GUI',...
    'Position',figPos,...
    'HandleVisibility','callback',...
    'Tag','gsdviewmain_Fig',...
    'CloseRequestFcn',@gsdviewmain_CloseRequestFcn,...
    'UserData',[]);
hAxes = axes(...
    'Parent',hgsdviewMain,...
    'Units','pixels',...
    'Position',[0 0 figSize],...
    'Xlim',[0 figSize(1)],...
    'Ylim',[0 figSize(2)],...
    'Tag','gsdviewmain_Axes');
hPatchMain = patch(...
    'Parent',hAxes,...
    'XData',[0 figSize(1) figSize(1) 0],...
    'YData',[0 0 figSize(2) figSize(2)],...
    'FaceColor',config.color.mainbg,...
    'EdgeColor',config.color.mainbg);

hGroupPatch = hggroup('Parent',hAxes);
set(get(hGroupPatch,'Children'),...
    'FaceColor',[1 1 1],...
    'EdgeColor',[1 1 0.7]);

hcopyright = text('Parent',hAxes,...
    'units','pixels',...
    'Position',[figSize(1)-10 20],...
    'fontsize',8,...
    'String',{'by AC@APS, ANL','Ver.1.0.0 May. 2018'},...
    'HorizontalAlignment','right',...
    'VerticalAlignment','mid',...
    'Tag','gsdviewmain_copyright');

% --- Help menu handles ---
hMenuHelp = uimenu(hgsdviewMain,...
    'Label','&Help',...
    'HandleVisibility','callback',...
    'Tag','gsdviewmain_MenuHelp');
hMenuHelpAnalysis = uimenu(hMenuHelp,...
    'Label','&GSD_192 Viewer GUI Manual',...
    'HandleVisibility','callback',...
    'Tag','gsdviewmain_MenuHelpAnalysis',...
    'callback',@gsdviewmain_MenuHelpCallbackFcn);

% ---------------------------
% --- Main Push Buttons   ---
% ---------------------------
hpush(1) = uicontrol('Style','pushbutton',...
    'Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[113 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Load Calib.',...
    'HorizontalAlignment','center',...
    'callback',@main_load_Callback,...
    'Enable','on',...
    'Tag','main_push_load');

hpush(2) = uicontrol('Style','pushbutton',...
    'Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[207 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Save Calib.',...
    'HorizontalAlignment','center',...
    'callback',@main_save_Callback,...
    'Enable','on',...
    'Tag','main_push_save');

hpush(3) = uicontrol('Style','pushbutton',...
    'Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[19 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Calibrate',...
    'HorizontalAlignment','center',...
    'callback',@main_calibrate_Callback,...
    'Enable','off',...
    'Tag','main_push_calibrate');

hplot(1) = uicontrol('Style','pushbutton',...
    'Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[500 345 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1,...
    'String','Plot',...
    'HorizontalAlignment','center',...
    'callback',@main_plot_Callback,...
    'Tag','main_push_plot');

hpop(1) = uicontrol('Style','PopupMenu',...
    'Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[80 345 400 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1,...
    'String',{'1'},...
    'Value',1,...
    'HorizontalAlignment','left',...
    'callback',@visopt_Callback,...
    'Enable','on',...
    'Tag','visopt_pop_scno');

hLabelMain(1) = text('Parent',hAxes,...
    'units','pixels',...
    'Position',[20 365],...
    'fontsize',config.fs.text2,...
    'backgroundcolor',config.color.mainbg,...
    'String','Scan :',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','main_txt_scno');


% ---------------------------
% --- Exp. Info Panel ---
% ---------------------------
usize.expinfo_panel = [275 265];
hGroupPanel_Exp = uipanel('Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[20 75 usize.expinfo_panel],...
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Exp./Det. Info.',...
    'TitlePosition','lefttop',...
    'Tag','expinfo_panel');

hAxesExpInfo = axes(...
    'Parent',hGroupPanel_Exp,...
    'Units','pixels',...
    'Position',[0 0 usize.expinfo_panel],...
    'Visible','off',...
    'Tag','expinfo_Axes');

heditExpInfo(1) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(2,7,config.size.edbox5,5)+[-15 5] config.size.edbox2],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',num2str(config.visopt.Inst(1).par(1,1),'%.10g'),...
    'HorizontalAlignment','center',...
    'CallBack',@expinfo_det_Callback,...
    'TooltipString','TOA (2-theta)',...
    'Tag','expinfo_edit_toa');

heditExpInfo(2) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(2,5,config.size.edbox5,5)+[-15 5] config.size.edbox2],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',num2str(config.visopt.Inst(1).par(1,end),'%.10g'),...
    'HorizontalAlignment','center',...
    'CallBack',@expinfo_det_Callback,...
    'TooltipString','Energy (keV) = a*channel + b',...
    'Tag','expinfo_edit_ch2eb');

heditExpInfo(3) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(2,6,config.size.edbox5,5)+[-15 5] config.size.edbox2],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',num2str(config.visopt.Inst(1).par(1,end-1),'%.10g'),...
    'HorizontalAlignment','center',...
    'CallBack',@expinfo_det_Callback,...
    'TooltipString','Energy (keV) = a*channel + b',...
    'Tag','expinfo_edit_ch2ea');

hLabelExpInfo(1) = text('Parent',hAxesExpInfo,...
    'units','pixels',...
    'Position',celpos(2,6,config.size.edbox3,5)+[5 7+config.size.edbox3(2)/2],...
    'fontsize',config.fs.text2,...
    'BackgroundColor',config.color.textbg,...
    'String','p_{1}(keV/ch)',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','expinfo_label_ch2ea');

hLabelExpInfo(2) = text('Parent',hAxesExpInfo,...
    'units','pixels',...
    'Position',celpos(2,5,config.size.edbox3,5)+[5 7+config.size.edbox3(2)/2],...
    'fontsize',config.fs.text2,...
    'BackgroundColor',config.color.textbg,...
    'String','p_{0}(keV)',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','expinfo_label_ch2eb');

hLabelExpInfo(3) = text('Parent',hAxesExpInfo,...
    'units','pixels',...
    'Position',celpos(2,7,config.size.edbox3,5)+[5 7+config.size.edbox3(2)/2],...
    'fontsize',config.fs.text2,...
    'BackgroundColor',config.color.textbg,...
    'String','TOA (^o)',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','expinfo_label_toa');

hpopExpInfo(1) = uicontrol('Style','PopupMenu',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(1,7,config.size.edbox3,5)+[5 12] config.size.edbox3-[20 8]],...
    'backgroundcolor',[1 1 1],...
    'fontsize',10,...
    'String',num2cell(1:2),...
    'Value',1,...
    'HorizontalAlignment','left',...
    'CallBack',@expinfo_det_Callback,...
    'Enable','off',...
    'Tag','expinfo_pop_detno');

hpopExpInfo(2) = uicontrol('Style','PopupMenu',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(1,6,config.size.edbox3,5)+[5 12] config.size.edbox3-[5 3]],...
    'backgroundcolor',[1 1 1],...
    'fontsize',10,...
    'String',num2cell(1:192),...
    'Value',1,...
    'HorizontalAlignment','left',...
    'CallBack',@expinfo_det_Callback,...
    'Enable','on',...
    'Tag','expinfo_pop_pxno');

data = num2cell(config.visopt.Inst(1).par);
ncol = size(config.visopt.Inst(1).par,2)-1;
colname = cell(1,ncol);
colname{1} = 'TOA';
j = 0;
for i = ncol:-1:1
    colname{i+1} = sprintf('p%d',j);
    j = j+1;
end

htabledetpar = uitable('Parent',hGroupPanel_Exp,...
    'Units','pixels',...
    'Position',[5 5 265 130],...
    'ColumnName',colname,...
    'ColumnEditable',true(zeros(1,ncol)),...
    'Data',data,...
    'Fontsize',11,...
    'CellSelectionCallback',@expinfo_det_Callback,...
    'Tag','expinfo_table_detpar');


% ---------------------------
% --- Visualization Option(s) Panel ---
% ---------------------------
usize.visopt_panel = [275 300];  %[275 345];
hGroupPanel_Vis = uipanel('Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[305 40 usize.visopt_panel],...
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Visualization Option(s)',...
    'TitlePosition','lefttop',...
    'Tag','visopt_panel');

hAxesVisOpt = axes(...
    'Parent',hGroupPanel_Vis,...
    'Units','pixels',...
    'Position',[0 0 usize.visopt_panel],...
    'Visible','off',...
    'Tag','visopt_Axes');

hLabelVisOpt(1) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,1,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Intensity',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_zrange');

hLabelVisOpt(2) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,2,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','step(s)',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_yrange');

hLabelVisOpt(3) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,3,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Ch/E/d',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_xrange');

hLabelVisOpt(4) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,4,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','x-axis unit',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_xunit');

hLabelVisOpt(5) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,5,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Pixel No.',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_scno');

heditVisOpt(1) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,1,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_zrange1');

heditVisOpt(2) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,1,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_zrange2');

heditVisOpt(3) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,3,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','0',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xrange1');

heditVisOpt(4) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,3,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','4096',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xrange2');

heditVisOpt(5) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,2,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_yrange1');

heditVisOpt(6) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,2,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_yrange2');

heditVisOpt(7) = uicontrol('Style','PopupMenu',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,4,config.size.edbox2,5)+[-10 10] config.size.edbox2+[20 0]],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',{'   channel','   Energy',['   d-spacing(' char(197) ')']},...
    'Value',1,...
    'HorizontalAlignment','left',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_pop_xunit');

heditVisOpt(8) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,5,config.size.edbox4,5)+[30 10] config.size.edbox2],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','1',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xpos');

heditVisOpt(9) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(4,5,config.size.edbox4,5)+[-20 25] 15 15],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox-4,...
    'String',{'+'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_push_forward');

heditVisOpt(10) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(4,5,config.size.edbox4,5)+[-20 10] 15 15],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox-4,...
    'String',{'--'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_push_backward');

heditVisOpt(11) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,6,config.size.edbox4,5)+[-20 9] 105 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'Normalize Int.'},...
    'TooltipString','normalize intensity based on exposuire time',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_normalize');

heditVisOpt(12) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,6,config.size.edbox4,5)+[-20 23] 105 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'Avg. steps'},...
    'TooltipString','average intensity over steps',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Enable','off',...
    'Tag','visopt_chkbox_avg1D');

heditVisOpt(13) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,6,config.size.edbox4,5)+[-20 9] 85 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'log/linear'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_yscale');

heditVisOpt(14) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(1,6,config.size.edbox4,5)+[5 23] 155 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'show motor position'},...
    'TooltipString','show detail motor position',...
    'HorizontalAlignment','left',...
    'CallBack',@visopt_Callback,...
    'Enable','off',...
    'Tag','visopt_chkbox_showmotor');

heditVisOpt(15) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(1,6,config.size.edbox4,5)+[5 9] 60 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'merge'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_mergescan');

% ---------------------------
% --- Visualization Option//Dector selection// Panel ---
% ---------------------------

hGroupPanel_Det(1) = uipanel('Parent', hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[160 152+90 105 40],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text2,...
    'Title','Det.',...
    'TitlePosition','lefttop',...
    'Tag','visopt_detsel_panel');

heditDetSel(1) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[10 5 40 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','2D',...
    'Value',1,...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_2D');

heditDetSel(2) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[60 5 40 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','1D',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_1D');

% ---------------------------
% --- File/Folder. Info Panel ---
% ---------------------------
usize.fileinfo_panel = [560 100];
hGroupPanel_Exe = uipanel('Parent',hgsdviewMain,...
    'units','pixels',...
    'Position',[20 390 usize.fileinfo_panel],...
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Directory/File Info.',...
    'TitlePosition','lefttop',...
    'Tag','fileinfo_panel');

hAxesExeInfo = axes(...
    'Parent',hGroupPanel_Exe,...
    'Units','pixels',...
    'Position',[0 0 usize.fileinfo_panel],...
    'Visible','off',...
    'Tag','exeinfo_Axes');

heditExeInfo(1) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[celpos(1,1,config.size.edbox2,5)+[95 10] 365 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',config.file,...
    'HorizontalAlignment','left',...
    'CallBack',@exeinfo_edit_file_Callback,...
    'Tag','exeinfo_edit_file');

heditExeInfo(2) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[celpos(1,2,config.size.edbox2,5)+[95 10] 450 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',config.folder,...
    'HorizontalAlignment','left',...
    'CallBack',@exeinfo_edit_folder_Callback,...
    'Tag','exeinfo_edit_folder');

hpushExeInfo(1) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[10 10 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Scan File',...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_file_Callback,...
    'Tag','exeinfo_file_path');

hpushExeInfo(2) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[465 10 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Read Scan(s)',...
    'Enable','off',...
    'BackgroundColor',[1 0 0],...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_readscan_Callback,...
    'Tag','exeinfo_push_start');

hpushExeInfo(3) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[10 45 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Proj. Folder',...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_folder_Callback,...
    'Tag','exeinfo_push_folder');


s_allhandle = guihandles(hgsdviewMain);
s_allhandle.config = config;
update_handle(s_allhandle);
% end % end of initial

%================================================================
% --- Function Callbacks
%================================================================

% --------------------------------
% --- Directory/File info Panel Callbacks
% --------------------------------
  function exeinfo_push_folder_Callback(~,~)
      h = get_handle;
      curpath = h.config.folder;
      if curpath==0
          path = uigetdir(pwd,'Select project folder');
      else
          path = uigetdir(curpath,'Select project folder');
      end
      %path = uigetdir(pwd);
      fprintf('\nSet Project folder:\n%s\n',path);
      set(h.exeinfo_edit_folder,'string',path)
      h.config.folder = path;
      update_handle(h);
      
  function exeinfo_push_file_Callback(~,~)
      h = get_handle;
      curpath = h.config.folder;
      
      if isempty(curpath) || ~isdir(h.config.folder)
          curpath = pwd;
      else
          curpath = h.config.folder;
      end
      multi_file = 0;
      [fname,~] = uigetfile(fullfile(curpath,'newdata.dat'),'Select data',...
                            'MultiSelect','on');
      if iscell(fname)
          multi_file = 1;
          set(h.exeinfo_edit_file,'string',[fname{1} '...multiple files']);
          fullname = fullfile(curpath,fname{1});
      else
        set(h.exeinfo_edit_file,'string',fname);
        fullname = fullfile(curpath,fname);
      end

      if exist(fullname,'file') == 2
          if multi_file
              ff = join(fname,';');
            fprintf('\nSelect file: %s\n',ff{1});
          else
            fprintf('\nSelect file: %s\n',fname);
          end
          h.config.file = fname;
          h.exeinfo_push_start.Enable='on';
          h.exeinfo_push_start.BackgroundColor=[0 1 0];
          h.exeinfo_push_start.String='Read Scan(s)';
          update_handle(h);
      else
          fprintf('\n"%s" is not a valid data files\n',fname);
          h.exeinfo_push_start.Enable='off';
          h.exeinfo_push_start.BackgroundColor=[1 0 0];
      end
      
  function exeinfo_push_readscan_Callback(hObject,~)
      h = get_handle;
      path = h.exeinfo_edit_folder.String;
      if iscell(h.config.file)
          file = h.config.file;
          datsum = zeros(192,4096);
          for i = 1:length(file)
            fname = fullfile(path,file{i});
            dat = read_gsd192(fname); % read-in data
            datsum = dat + datsum; 
            da.data{i} = dat;
            scno_txt{i} = sprintf('%d. %s',i, file{i});
          end
          da.data{i+1} = datsum;
      else
          file = h.exeinfo_edit_file.String;
          fname = fullfile(path,file);
          dat = read_gsd192(fname);       % read-in data
          da.data = {dat};
          scno_txt{1} = sprintf('1. %s',file);
      end
      h.visopt_pop_scno.Value = 1;
      h.visopt_pop_scno.String = scno_txt;      
      
      detno = h.expinfo_pop_detno.Value;
      da.Inst(detno).par = cell2mat(h.expinfo_table_detpar.Data);
      h.data = da;                     % save data in handle
      set(hObject,'string','done')
      update_handle(h);

  function exeinfo_edit_folder_Callback(hObject,~)
      h = get_handle;
      proj_folder = get(hObject,'string');
      if isdir(proj_folder) 
          fprintf('\nSet Project folder:\n%s\n',proj_folder);
          h.config.folder = proj_folder;
      else
          fprintf('Folder "%s" does not exist !!\n',proj_folder);
          set(hObject,'string','');
          h.config.folder = '';
      end
       update_handle(h);
      
  function exeinfo_edit_file_Callback(hObject,~)
      h = get_handle;
      path_to_folder = h.config.folder;
      %get(hObject,'tag')
      %scan_folder = get(hObject,'string');
      fname = get(hObject,'string');
      %fullfolder = fullfile(path_to_folder,scan_folder);
      fullname = fullfile(path_to_folder,fname);
%       if ~isdir(fullfolder)
%           fprintf('Folder "%s" does not exist !!\n',scan_folder);
%           h.exeinfo_push_start.Enable='off';
%           h.exeinfo_push_start.BackgroundColor=[1 0 0];
%           return
%       end
      %fullname = fullfile(path_to_folder,scan_folder,sprintf('%s.xy',scan_folder));
      if exist(fullname,'file') == 2
          fprintf('\nSelect data: %s\n',fname);
          h.config.file = fname;
          h.exeinfo_push_start.Enable='on';
          h.exeinfo_push_start.String='Read Scan(s)';
          h.exeinfo_push_start.BackgroundColor=[0 1 0];
          update_handle(h);
      else
          fprintf('\n"%s" is not a valid data file\n',fname);
          h.exeinfo_push_start.Enable='off';
          h.exeinfo_push_start.String='Read Scan(s)';
          h.exeinfo_push_start.BackgroundColor=[1 0 0];
      end
      
      
% --------------------------------
% --- Exp.info Panel Callbacks
% --------------------------------
  function expinfo_det_Callback(hObject,~)
      h = get_handle;
      tag = get(hObject,'Tag');
      switch tag
          %%% individual pixel
          case 'expinfo_pop_pxno'
              detno = h.expinfo_pop_detno.Value;
              pxno = get(hObject,'Value');
              detpar = h.config.visopt.Inst(detno).par(pxno,:);
              fprintf('select det-%d, px-%d, [%.8f %.8f %.8f]\n',detno, pxno, detpar(1), detpar(end-1), detpar(end))
              h.expinfo_edit_ch2ea.String = num2str(detpar(end-1),'%.8g');
              h.expinfo_edit_ch2eb.String = num2str(detpar(end),'%.8g');
              h.expinfo_edit_toa.String = num2str(detpar(1),'%.8g');
          case 'expinfo_edit_ch2ea'
              detno = h.expinfo_pop_detno.Value;
              pxno  = h.expinfo_pop_pxno.Value;
              orgpar = h.config.visopt.Inst(detno).par(pxno,end-1);
              par = str2num(get(hObject,'String'));
              
              %[h.expinfo_table_detpar.Data{pxno,:}]
              
              if isempty(par) || par == 0
                  set(hObject,'String',num2str(orgpar,'%.10g'));
              elseif par < 0
                  set(hObject,'String',num2str(abs(par),'%.10g'));
                  h.config.visopt.Inst(detno).par(pxno,end-1) = abs(par);
                  h.expinfo_table_detpar.Data{pxno,end-1} = abs(par);
              else
                  h.config.visopt.Inst(detno).par(pxno,end-1) = par;
                  h.expinfo_table_detpar.Data{pxno,end-1} = par;
              end
          case 'expinfo_edit_ch2eb'
              detno = h.expinfo_pop_detno.Value;
              pxno  = h.expinfo_pop_pxno.Value;
              orgpar = h.config.visopt.Inst(detno).par(pxno,end);
              par = str2num(get(hObject,'String'));
              if isempty(par) || par == 0
                  set(hObject,'String',num2str(orgpar,'%.10g'));
              elseif par < 0
                  set(hObject,'String',num2str(abs(par),'%.10g'));
                  h.config.visopt.Inst(detno).par(pxno,end) = abs(par);
                  h.expinfo_table_detpar.Data{pxno,end} = abs(par);
              else
                  h.config.visopt.Inst(detno).par(pxno,end) = par;
                  h.expinfo_table_detpar.Data{pxno,end} = par;
              end
          case 'expinfo_edit_toa'
              detno = h.expinfo_pop_detno.Value;
              pxno  = h.expinfo_pop_pxno.Value;
              orgpar = h.config.visopt.Inst(detno).par(pxno,1);
              par = str2num(get(hObject,'String'));
              if isempty(par) || par == 0
                  set(hObject,'String',num2str(orgpar,'%.10g'));
              elseif par < 0
                  set(hObject,'String',num2str(abs(par),'%.10g'));
                  h.config.visopt.Inst(detno).par(pxno,1) = abs(par);
                  h.expinfo_table_detpar.Data{pxno,1} = abs(par);
              else
                  h.config.visopt.Inst(detno).par(pxno,1) = par;
                  h.expinfo_table_detpar.Data{pxno,1} = par;
              end
          otherwise
              fprintf('No yet set!!\n');
      end
      update_handle(h);
      
% --------------------------------
% --- Visualization Options Callbacks
% --------------------------------
  function visopt_Callback(hObject,~)
      h = get_handle;
      
      % update options for data visualization
      
      tag = get(hObject,'Tag');
      value = str2double(get(hObject,'String'));
      
      switch tag
          case 'visopt_edit_xrange1'            
              if value<0
                  set(hObject,'String',min([abs(value) str2double(h.visopt_edit_xrange2.String)]))
              end
              xrange(1) = str2double(h.visopt_edit_xrange1.String);
              xrange(2) = str2double(h.visopt_edit_xrange2.String);
              if isnan(xrange(1))
                  h.visopt_edit_xrange1.String='0';
                  xrange(1) = 0;
              end  
              h.config.visopt.datalim{1} = xrange;
              
          case 'visopt_edit_xrange2'
              if value<str2double(h.visopt_edit_xrange1.String)
                  set(hObject,'String',h.visopt_edit_xrange1.String)
              end              
              xunit = h.visopt_pop_xunit.Value;
              xrange(1) = str2double(h.visopt_edit_xrange1.String);
              xrange(2) = str2double(h.visopt_edit_xrange2.String);              
              if isnan(xrange(2))
                  switch xunit
                      case 1
                          h.visopt_edit_xrange2.String='4096';
                          xrange(2) = 4096;
                      case 2
                          h.visopt_edit_xrange2.String='250';
                          xrange(2) = 250;
                      case 3
                          h.visopt_edit_xrange2.String='5';
                          xrange(2) = 5;                          
                  end                  
              end
              h.config.visopt.datalim{1} = xrange;
              
          case {'visopt_edit_yrange1','visopt_edit_yrange2',...
                'visopt_edit_zrange1','visopt_edit_zrange2'}
              yrange(1) = str2double(h.visopt_edit_yrange1.String);
              yrange(2) = str2double(h.visopt_edit_yrange2.String);
              zrange(1) = str2double(h.visopt_edit_zrange1.String);
              zrange(2) = str2double(h.visopt_edit_zrange2.String);
              if isnan(yrange(1))
                  h.visopt_edit_yrange1.String='';
                  yrange = 'auto';
              end
              if isnan(yrange(2))
                  h.visopt_edit_yrange2.String='';
                  yrange = 'auto';
              end
              if isnan(zrange(1))
                  h.visopt_edit_zrange1.String='';
                  zrange = 'auto';
              end
              if isnan(zrange(2))
                  h.visopt_edit_zrange2.String='';
                  zrange = 'auto';
              end              
              h.config.visopt.datalim{2} = yrange;
              h.config.visopt.datalim{3} = zrange;
              
          case 'visopt_pop_xunit'
              %assignin('base','h',h);
              xunit = h.visopt_pop_xunit.Value;
              org_unit = h.config.visopt.x_unit;
              org_limit = h.config.visopt.datalim{1};
              detinfo = h.config.visopt.Inst(1);
              switch xunit
                  case 1
                      %fprintf('unit is Channel Number\n'); 
                      switch org_unit
                          case 'E'
                              new_max = min([round((org_limit(2)-detinfo.par(1,end))/detinfo.par(1,end-1)) 4096]);
                              new_min = max([round((org_limit(1)-detinfo.par(1,end))/detinfo.par(1,end-1)) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'd'
                              Emin = 12.398419057638671/(2*org_limit(2)*sind(detinfo.par(1,1)/2));
                              Emax = min([12.398419057638671/(2*org_limit(1)*sind(detinfo.par(1,1)/2)) 250]);
                              new_max = min([round((Emax-detinfo.par(1,end))/detinfo.par(1,end-1)) 4096]);
                              new_min = max([round((Emin-detinfo.par(1,end))/detinfo.par(1,end-1)) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end
                      h.config.visopt.x_unit = 'ch';
                  case 2
                      %fprintf('unit is Energy\n');
                      switch org_unit
                          case 'ch'
                              new_max = round((org_limit(2)*detinfo.par(1,end-1)+detinfo.par(1,end)));
                              new_min = max([round((org_limit(1)*detinfo.par(1,end-1)+detinfo.par(1,end))) 0 ]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'd'
                              new_min = round(12.398419057638671/(2*org_limit(2)*sind(detinfo.par(1,1)/2)));
                              new_max = min([round(12.398419057638671/(2*org_limit(1)*sind(detinfo.par(1,1)/2))) 250]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end                      
                      h.config.visopt.x_unit = 'E';
                  case 3
                      %fprintf('unit is d-spacing\n');
                      switch org_unit
                          case 'ch'
                              E_max = round((org_limit(2)*detinfo.par(1,end-1)+detinfo.par(1,end)));
                              E_min = max([round((org_limit(1)*detinfo.par(1,end-1)+detinfo.par(1,end))) 0.1]);
                              new_max = min([12.398419057638671/E_min/2/sind(detinfo.par(1,1)/2) 5]);
                              new_min = max([12.398419057638671/E_max/2/sind(detinfo.par(1,1)/2) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'E'
                              new_max = min([12.398419057638671/org_limit(1)/2/sind(detinfo.par(1,1)/2) 5]);
                              new_min = max([12.398419057638671/org_limit(2)/2/sind(detinfo.par(1,1)/2) 0]);                              
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end                        
                      h.config.visopt.x_unit = 'd';
              end
              
          case 'visopt_edit_xpos'
              if isempty(h.data)
                  errordlg('Please read files first!!','Error');
                  return;
              end
              posno = round(abs(str2num(get(hObject,'String'))));
              scno = h.visopt_pop_scno.Value;
              if isempty(posno)
                  posno = 1;
                  set(hObject,'String',num2str(posno));
                  errordlg('Input must be a number','Error','modal');
              elseif max(posno>size(h.data(scno).data{1},1))
                  posno = 1;
                  set(hObject,'String',num2str(posno));
                  errordlg(sprintf('Step number must between 1 - %d',size(h.data(scno).data{1},1)),'Error','modal');
              else
                  set(hObject,'String',num2str(posno));
              end
              h.config.visopt.posno = posno;

          case 'visopt_push_forward'
              if isfield(h,'data')
                  %size(h.data(h.visopt_pop_scno.Value).data{1},1)
                  posno = str2num(h.visopt_edit_xpos.String);
                  if max(posno) < size(h.data(h.visopt_pop_scno.Value).data{1},1)
                      h.visopt_edit_xpos.String = num2str(posno+1);
                      h.config.visopt.posno = posno+1;
                  end
              end
              
          case 'visopt_push_backward'
              if isfield(h,'data')
                  %size(h.data(h.visopt_pop_scno.Value).data{1},1);
                  posno = str2num(h.visopt_edit_xpos.String);
                  if min(posno) > 1
                      h.visopt_edit_xpos.String = num2str(posno-1);
                      h.config.visopt.posno = posno-1;
                  end
              end

          case 'visopt_pop_scno'
              if ~isfield(h,'data')
                  errordlg('Please read files first!!','Error');
                  return;
              elseif isempty(h.data)
                  errordlg('Please read files first!!','Error');
                  return;
              end              
              scno = get(hObject,'Value');
              posno = str2num(h.visopt_edit_xpos.String);
              if max(posno>size(h.data(1).data{scno},1))
                  h.visopt_edit_xpos.String = '1';
                  h.config.visopt.posno = 1;
              end
              h.config.visopt.scno = scno;
              
          case 'visopt_chkbox_det1'
              if get(hObject,'Value')
                  fprintf('Select Det-1...\n');
              end
              
          case 'visopt_chkbox_det2'
              if get(hObject,'Value')
                  fprintf('Select Det-2...\n');
              end
              
          case 'visopt_chkbox_1D'
              if get(hObject,'Value')
                  fprintf('Plot type: 1D line plot\n');
              end
              
          case 'visopt_chkbox_2D'
              if get(hObject,'Value')
                  fprintf('Plot type: 2D Map\n');
              end
              
          case 'visopt_chkbox_avg1D'
              h.config.visopt.avg_1D = get(hObject,'Value');

          case 'visopt_chkbox_normalize'
              h.config.visopt.normalize = get(hObject,'Value');
          
          case 'visopt_chkbox_yscale'
              switch get(hObject,'Value')
                  case 0
                      fprintf('switch yscale to ''log''\n')
                  case 1
                      fprintf('switch yscale to ''linear''\n')                      
              end
              
          case 'visopt_chkbox_showmotor'
              switch get(hObject,'Value')
                  case 1
                      if ~isfield(h,'data')
                          fprintf('read the data first!!\n');
                      else
                          scno = h.visopt_pop_scno.Value;
                          edd_show_scan_details(h.data(scno));
                      end
              end
          otherwise
              fprintf('Not set yet!!\n');
      end
      update_handle(h);

     
% --------------------------------
% --- Main Pushbutton Callbacks
% --------------------------------
function main_load_Callback(~,~)
  [fname,path] = uigetfile({'*.mat','GSD_192 detector calibration';...
                     '*.*','All Files' },...
                     'Load calibration',...
                     'gsd_det_cali.mat');
  h = get_handle;
  assignin('base','h',h);
  if fname ~=0
      input = [path fname];    
      load(input);
      h = get_handle;
      % assign detector parameters to config
      h.config.visopt.Inst = Inst;
      format longG
      % update panel
      detno = h.expinfo_pop_detno.Value;
      pxno  = h.expinfo_pop_pxno.Value;
      h.expinfo_edit_ch2ea.String = num2str(Inst(detno).par(pxno,end-1),'%.10g');
      h.expinfo_edit_ch2eb.String = num2str(Inst(detno).par(pxno,end),'%.10g');
      h.expinfo_edit_toa.String = num2str(Inst(detno).par(pxno,1),'%.10g');
      % update table
      ncol = size(Inst(detno).par,2)-1;
      colname = cell(1,ncol);
      colname{1} = 'TOA';
      j = 0;
      for i = ncol:-1:1
          colname{i+1} = sprintf('p%d',j);
          j = j+1;
      end
      h.expinfo_table_detpar.ColumnName = colname;
      h.expinfo_table_detpar.Data = num2cell(Inst(detno).par);
      update_handle(h);
  end

function main_save_Callback(~,~)
  h = get_handle;
  [fname,path] = uiputfile({'*.mat','GSD_192 detector calibration';...
                     '*.*','All Files' },...
                     'Save calibration',...
                     'edd_det_caki.mat');
  if fname ~= 0
      output = [path fname];
      Inst = h.config.visopt.Inst;
      save(output,'Inst','-v7.3');
  end

function main_calibrate_Callback(~,~)
      h = get_handle;
      edd_calibrant(h);
      
function main_plot_Callback(~,~)
    h = get_handle;
    if ~isfield(h,'func_error_ct')
        h.func_error_ct.plot = 0;
        update_handle(h);
    end

    if ~isfield(h,'data')
        ruletxt = {'Dude... read the data first!!',...
            'Dude... read the data first!!',...
            'Are you fucking with me?',...
            'Don''t fuck with me, asshole!!'};
        errordlg({ruletxt{h.func_error_ct.plot+1}},'Plot Error','modal');
        h.func_error_ct.plot = h.func_error_ct.plot +1;
        update_handle(h);
        if h.func_error_ct.plot==4
            delete(findall(0,'Tag','gsdviewmain_Fig'));
        end
        return;
    end

    %%% make sure config is read!! %%%
    typelist = [h.visopt_chkbox_2D.Value h.visopt_chkbox_1D.Value];
    
    if h.visopt_chkbox_mergescan.Value
        h.config.visopt.scno = length(h.data.data);
    else
        h.config.visopt.scno = h.visopt_pop_scno.Value;
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    da.data  = h.data.data;
    %%% make sure Inst is updated!! %%%
    opt = h.config.visopt;
    opt.yscale = h.visopt_chkbox_yscale.Value;
    %opt.title  = h.config.file;
    opt.title  = h.exeinfo_edit_file.String;
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    if typelist(1)
        opt.type = '2draw';
        gsdplot(da,opt)
    end
    
    if typelist(2)
        opt.type = 'raw';
        gsdplot(da,opt)
    end
        
    % show detail motor positions
    %if h.visopt_chkbox_showmotor.Value
    %    edd_show_scan_details(h.data(h.visopt_pop_scno.Value))
    %end

    update_handle(h)
      
%==========================================================================
% --- close request function of xrdguimain fig 
%==========================================================================

function gsdviewmain_CloseRequestFcn(~,~)
delete(findall(0,'Tag','gsdviewmain_Fig'));
delete(findall(0,'-regexp','Tag','gsd_fig*'));
delete(findall(0,'-regexp','Tag','gsdshowscan*'));
delete(findall(0,'-regexp','Tag','gsdcali*'));

%==========================================================================
% --- Help About callback function
%==========================================================================

function gsdviewmain_MenuHelpCallbackFcn(~,~)
str ={'';...
      'You shouldn''t need help !!';...
      'It''s straightforward !!';...
      '';...
      'What? you want to donate?';...
      'I accept paypal!!';...
      '   Andrew Chuang';...
      '   (chuang.cp@gmail.com)'}; 
hMSGBox = msgbox(str,'Help Manual','modal');
set(hMSGBox,'color',[1 1 0.85]);
set(get(get(hMSGBox,'currentaxes'),'children'),'Fontsize',10)

%==========================================================================
% --- Load all handle object function
%==========================================================================

function h = get_handle
      hmain = findall(0,'Tag','gsdviewmain_Fig');
      h = getappdata(hmain,'allhandle');

%==========================================================================
% --- Save all handle object function
%==========================================================================

function update_handle(handle_to_save)
      hmain = findall(0,'Tag','gsdviewmain_Fig');
      setappdata(hmain,'allhandle',handle_to_save);

